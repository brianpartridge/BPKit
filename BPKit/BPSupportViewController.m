//
//  BPSupportViewController.m
//  BPKit
//
//  Created by Brian Partridge on 3/17/12.
//  Copyright (c) 2012 Brian Partridge. All rights reserved.
//

#import "BPSupportViewController.h"
#import "BPAboutViewController.h"

typedef enum {
    SectionSupport,
    SectionLike,
    SectionAbout,
    SectionCount,
} Sections;

typedef enum {
    SectionLikeRowRate,
    SectionLikeRowUpgrade,
    SectionLikeRowCount,
    SectionLikeRowCountNoUpgrade = SectionLikeRowUpgrade,
} SectionLikeRows;

@interface BPSupportViewController ()

@property (nonatomic, strong) NSDictionary *data;
@property (nonatomic, strong) NSMutableArray *sections;

- (void)configureCell:(UITableViewCell *)cell atIndexPath:(NSIndexPath *)indexPath;

@end

@implementation BPSupportViewController

@synthesize data;
@synthesize sections;

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.title = @"Support";
    
    self.data = [[NSBundle mainBundle] objectForInfoDictionaryKey:@"BPSupportContent"];
    
    self.sections = [NSMutableArray arrayWithObjects:[NSNumber numberWithInt:SectionSupport], 
                     [NSNumber numberWithInt:SectionLike], 
                     [NSNumber numberWithInt:SectionAbout], 
                     nil];
}

- (void)configureCell:(UITableViewCell *)cell atIndexPath:(NSIndexPath *)indexPath {
    switch (indexPath.section) {
        case SectionSupport:
            cell.textLabel.text = @"Contact Support";
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
            cell.imageView.image = [UIImage imageNamed:@"support"];
            break;
        case SectionLike:
            switch (indexPath.row) {
                case SectionLikeRowRate:
                    cell.textLabel.text = [NSString stringWithFormat:@"I love it!", [NSBundle mainBundle].bp_name];
                    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
                    cell.imageView.image = [UIImage imageNamed:@"rate"];
                    break;
                case SectionLikeRowUpgrade:
                    cell.textLabel.text = @"Upgrade To Pro";
                    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
                    cell.imageView.image = [UIImage imageNamed:@"upgrade"];
                    break;
                default:
                    break;
            }
            break;
        case SectionAbout:
            cell.textLabel.text = @"About";
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
            break;
        default:
            break;
    }
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return SectionCount;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    NSInteger count = 1;
    
    if (section == SectionLike) {
        count = ([NSString bp_isNilOrEmpty:[self.data objectForKey:@"BPUpgradeURL"]]) ?
                    SectionLikeRowCountNoUpgrade : SectionLikeRowCount;
    }
    
    return count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @"Cell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];
    }
    
    [self configureCell:cell atIndexPath:indexPath];
    
    return cell;
}

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section {
    NSString *title = nil;
    
    switch (section) {
        case SectionSupport:
            title = @"Found a problem?";
            break;
        case SectionLike:
            title = [NSString stringWithFormat:@"Like %@?", [NSBundle mainBundle].bp_name];
            break;
        default:
            break;
    }
    
    return title;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section {
    UIView *footer = nil;
    
#ifndef POCKET_SHARE_PRO
    if (section == SectionLike) {
        // TODO: generate view
    }
#endif
    
    return footer;
}

#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    switch (indexPath.section) {
        case SectionSupport: {
            MFMailComposeViewController *mailer = [[MFMailComposeViewController alloc] init];
            mailer.mailComposeDelegate = self;
            [mailer setSubject:[NSString stringWithFormat:@"[%@ Support] ", [[NSBundle mainBundle] bp_name]]];
            [mailer setToRecipients:[NSArray arrayWithObject:[self.data objectForKey:@"BPSupportEmail"]]];
            NSString *body = [NSString stringWithFormat:@"\n\nThis message was generated by %@ v%@.", 
                              [[NSBundle mainBundle] bp_name], 
                              [[NSBundle mainBundle] bp_version]];
            [mailer setMessageBody:body isHTML:NO];
            [self presentModalViewController:mailer animated:YES];
        }   break;
        case SectionLike:
            switch (indexPath.row) {
                case SectionLikeRowRate: {
                    NSURL *url = [NSURL URLWithString:[self.data objectForKey:@"BPRateURL"]];
                    [[UIApplication sharedApplication] openURL:url];
                }   break;
                case SectionLikeRowUpgrade: {
                    NSURL *url = [NSURL URLWithString:[self.data objectForKey:@"BPUpgradeURL"]];
                    [[UIApplication sharedApplication] openURL:url];
                }   break;
                default:
                    break;
            }
            break;
        case SectionAbout: {
            BPAboutViewController *about = [[BPAboutViewController alloc] initWithStyle:self.tableView.style];
            about.tableView.backgroundColor = self.tableView.backgroundColor;
            about.tableView.backgroundView = [self.tableView.backgroundView copy];
            [self shareBlocksWithController:about];
            [self.navigationController pushViewController:about animated:YES];
        }   break;
        default:
            break;
    }
}

#pragma mark - MFMailComposeViewControllerDelegate

- (void)mailComposeController:(MFMailComposeViewController *)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError *)error {
    [controller dismissModalViewControllerAnimated:YES];
}

@end
