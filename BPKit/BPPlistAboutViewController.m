//
//  BPAboutViewController.m
//  BPKit
//
//  Created by Brian Partridge on 3/2/12.
//  Copyright (c) 2012 Brian Partridge. All rights reserved.
//

#import "BPPlistAboutViewController.h"

NSString * const kBPSupportEmail = @"BPSupportEmail";
NSString * const kBPSupportTwitter = @"BPSupportTwitter";
NSString * const kBPSupportURL = @"BPSupportURL";
NSString * const kBPAboutContent = @"BPAboutContent";

@interface BPPlistAboutViewController ()

@property (nonatomic, strong) NSDictionary *content;
@property (nonatomic, strong) NSArray *sections;

- (NSArray *)rowsForSectionAtIndex:(NSInteger)index;
- (NSDictionary *)rowAtIndexPath:(NSIndexPath *)indexPath;

- (void)handleTapForRowAtIndexPath:(NSIndexPath *)indexPath;
- (void)handleActionForRowAtIndexPath:(NSIndexPath *)indexPath;

- (void)configureCell:(UITableViewCell *)cell forRowAtIndexPath:indexPath;

@end

@implementation BPPlistAboutViewController

@synthesize content;
@synthesize sections;

- (NSArray *)rowsForSectionAtIndex:(NSInteger)index {
    NSDictionary *section = [self.sections objectAtIndex:index];
    NSArray *rows = [section objectForKey:@"Rows"];
    return rows;
}

- (NSDictionary *)rowAtIndexPath:(NSIndexPath *)indexPath {
    NSArray *rows = [self rowsForSectionAtIndex:indexPath.section];
    return [rows objectAtIndex:indexPath.row];
}

+ (MFMailComposeViewController *)supportMailer {
    NSBundle *bundle = [NSBundle mainBundle];
    
    MFMailComposeViewController *mailer = [[MFMailComposeViewController alloc] init];
    [mailer setSubject:[NSString stringWithFormat:@"[%@ Support] ", [bundle bp_name]]];
    [mailer setToRecipients:[NSArray arrayWithObject:[bundle bp_infoObjectForKey:kBPSupportEmail]]];
    NSString *body = [NSString stringWithFormat:@"\n\nThis message was generated by %@ v%@.", [bundle bp_name], [bundle bp_version]];
    [mailer setMessageBody:body isHTML:NO];
    
     return mailer;
}

- (id)init {
    return [self initWithStyle:UITableViewStyleGrouped];
}

- (id)initWithStyle:(UITableViewStyle)style {
    self = [super initWithStyle:style];
    if (self) {
        self.content = [[NSBundle mainBundle] bp_infoObjectForKey:kBPAboutContent];
        self.sections = [self.content objectForKey:@"Sections"];
        
        self.navigationItem.title = @"About";
    }
    return self;
}

- (void)handleTapForRowAtIndexPath:(NSIndexPath *)indexPath {
//    NSDictionary *row = [self rowAtIndexPath:indexPath];
}

- (void)handleActionForRowAtIndexPath:(NSIndexPath *)indexPath {
//    NSDictionary *row = [self rowAtIndexPath:indexPath];
}

- (void)configureCell:(UITableViewCell *)cell forRowAtIndexPath:indexPath {
    NSDictionary *row = [self rowAtIndexPath:indexPath];
    cell.textLabel.text = [row objectForKey:@"Title"];
    cell.detailTextLabel.text = [row objectForKey:@"Detail"];
    
    __block BOOL hasTap = NO;
    __block BOOL hasAction = NO;
    [row.allKeys enumerateObjectsWithOptions:NSEnumerationConcurrent usingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
        NSString *key = obj;
        if ([key hasPrefix:@"Tap"]) {
            hasTap = YES;
        } else if ([key hasPrefix:@"Action"]) {
            hasAction = YES;
        }
    }];
     
    if (hasAction) {
        cell.accessoryType = UITableViewCellAccessoryDetailDisclosureButton;
    } else if (hasTap) {
        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    }
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return self.sections.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return [self rowsForSectionAtIndex:section].count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *CellIdentifier = @"Cell";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:CellIdentifier];
    }
    
    [self configureCell:cell forRowAtIndexPath:indexPath];
    
    return cell;
}

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section {
    NSDictionary *sectionDict = [self.sections objectAtIndex:section];
    return [sectionDict objectForKey:@"Title"];
}

- (NSString *)tableView:(UITableView *)tableView titleForFooterInSection:(NSInteger)section {
    NSDictionary *sectionDict = [self.sections objectAtIndex:section];
    return [sectionDict objectForKey:@"Footer"];    
}

#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    [self handleTapForRowAtIndexPath:indexPath];
}

- (void)tableView:(UITableView *)tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)indexPath {
    [self handleActionForRowAtIndexPath:indexPath];
}

@end
